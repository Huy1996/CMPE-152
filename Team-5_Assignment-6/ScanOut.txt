Token
PROGRAM : PROGRAM
IDENTIFIER : test
SEMICOLON : ;
TYPE : TYPE
IDENTIFIER : name
EQUAL : =
IDENTIFIER : string
SEMICOLON : ;
FUNCTION : FUNCTION
IDENTIFIER : max
LPAREN : (
IDENTIFIER : num1
COMMA : ,
IDENTIFIER : num2
COLON : :
IDENTIFIER : integer
RPAREN : )
COLON : :
IDENTIFIER : integer
SEMICOLON : ;
VAR : VAR
IDENTIFIER : result
COLON : :
IDENTIFIER : integer
SEMICOLON : ;
BEGIN : BEGIN
IF : if
LPAREN : (
IDENTIFIER : num1
GT : >
IDENTIFIER : num2
RPAREN : )
THEN : then
IDENTIFIER : result
ASSIGN : :=
IDENTIFIER : num1
ELSE : else
IDENTIFIER : result
ASSIGN : :=
IDENTIFIER : num2
SEMICOLON : ;
IDENTIFIER : max
ASSIGN : :=
IDENTIFIER : result
SEMICOLON : ;
END : END
SEMICOLON : ;
VAR : VAR
IDENTIFIER : i
COMMA : ,
IDENTIFIER : j
COMMA : ,
IDENTIFIER : count
COLON : :
IDENTIFIER : integer
SEMICOLON : ;
IDENTIFIER : ch
COLON : :
IDENTIFIER : char
SEMICOLON : ;
BEGIN : BEGIN
IDENTIFIER : i
ASSIGN : :=
INTEGER : 1
SEMICOLON : ;
IDENTIFIER : j
ASSIGN : :=
INTEGER : 2
SEMICOLON : ;
IDENTIFIER : count
ASSIGN : :=
IDENTIFIER : max
LPAREN : (
IDENTIFIER : i
COMMA : ,
IDENTIFIER : j
RPAREN : )
SEMICOLON : ;
IF : if
IDENTIFIER : i
EQUAL : =
IDENTIFIER : j
THEN : then
WRITELN : writeln
LPAREN : (
STRING : 'Equal'
RPAREN : )
ELSE : else
WRITELN : writeln
LPAREN : (
STRING : 'Not Equal'
RPAREN : )
SEMICOLON : ;
FOR : for
IDENTIFIER : count
ASSIGN : :=
INTEGER : 1
TO : to
INTEGER : 10
DO : do
BEGIN : begin
IDENTIFIER : i
ASSIGN : :=
IDENTIFIER : count
PLUSOP : +
INTEGER : 1
SEMICOLON : ;
IDENTIFIER : j
ASSIGN : :=
IDENTIFIER : i
SEMICOLON : ;
END : end
SEMICOLON : ;
WHILE : while
IDENTIFIER : i
LT : <
INTEGER : 10
DO : do
BEGIN : begin
WRITE : write
LPAREN : (
IDENTIFIER : i
COLON : :
INTEGER : 1
COLON : :
INTEGER : 0
RPAREN : )
SEMICOLON : ;
IDENTIFIER : i
ASSIGN : :=
IDENTIFIER : i
PLUSOP : +
INTEGER : 1
END : end
SEMICOLON : ;
REPEAT : repeat
IDENTIFIER : j
ASSIGN : :=
IDENTIFIER : j
PLUSOP : +
IDENTIFIER : j
DIVOP : /
INTEGER : 2
SEMICOLON : ;
IDENTIFIER : i
ASSIGN : :=
IDENTIFIER : i
DIVOP : /
LPAREN : (
IDENTIFIER : j
PLUSOP : +
INTEGER : 10
RPAREN : )
MULTOP : *
INTEGER : 20
SEMICOLON : ;
WRITELN : writeln
LPAREN : (
IDENTIFIER : j
RPAREN : )
SEMICOLON : ;
UNTIL : until
IDENTIFIER : j
EQUAL : =
INTEGER : 1
SEMICOLON : ;
CASE : case
IDENTIFIER : i
PLUSOP : +
INTEGER : 1
OF : of
INTEGER : 1
COMMA : ,
INTEGER : 2
COMMA : ,
INTEGER : 3
COLON : :
IDENTIFIER : j
ASSIGN : :=
IDENTIFIER : j
PLUSOP : +
INTEGER : 1
SEMICOLON : ;
INTEGER : 4
COMMA : ,
INTEGER : 5
COLON : :
IDENTIFIER : j
ASSIGN : :=
IDENTIFIER : j
PLUSOP : +
INTEGER : 2
SEMICOLON : ;
END : end
END : END
PERIOD : .
END_OF_FILE : <EOF>
